name: Release

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Determine version bump type
        id: bump-type
        run: |
          # Check commit messages since last tag for conventional commits
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"%s")
            if echo "$COMMITS" | grep -q "^feat!:\|^fix!:\|BREAKING CHANGE:"; then
              echo "type=major" >> $GITHUB_OUTPUT
            elif echo "$COMMITS" | grep -q "^feat:"; then
              echo "type=minor" >> $GITHUB_OUTPUT
            else
              echo "type=patch" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          npm version ${{ steps.bump-type.outputs.type }} -m "chore(release): v%s [skip ci]"
          git push

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Determine version tag
        id: version-tag
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag=v${{ steps.package-version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Create git tag
        if: github.ref_type != 'tag'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ steps.version-tag.outputs.tag }}" -m "Release ${{ steps.version-tag.outputs.tag }}"
          git push origin "${{ steps.version-tag.outputs.tag }}"

      - name: Generate changelog
        id: changelog
        run: |
          echo "changes<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in this release" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD 2>/dev/null || git log --pretty=format:"- %s (%h)" -10 >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version-tag.outputs.tag }}
          release_name: Release ${{ steps.version-tag.outputs.tag }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: false

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}